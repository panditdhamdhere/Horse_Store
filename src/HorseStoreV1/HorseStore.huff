// send calldata -> function dispatch -> function

/* interface */
#define function updateHorseNumber(uint256) nonpayable returns()
#define function readNumberOfHorses() view returns(uint256)

#define macro MAIN() = takes(0) returns(0) {
    // 1 bytes = 8 bits

    // How do I cut down the calldata -> function selector
    // 64/2 = 32 bytes-> right
    // I need to right shift 28 bytes, 224 bits
   
    // PUSH1 0xe0      // [0xe0, calldata (32)]
    // shr             // [ Function selector ]
    0x00 calldataload 0xE0 shr // [function_selector]

    // updateHorseNumber selector
    dup1 __FUNC_SIG(updateHorseNumber) eq updatejump jumpi // [] 

    // readNumberOfHorses
     __FUNC_SIG(readNumberOfHorses) eq updatejump jumpi // [] 

    0x00 0x00 revert       // []

  updatejump:
   SET_NUMBER_OF_HORSES()

  readJump:
   GET_NUMBER_OF_HORSES()
  
}

#define macro SET_NUMBER_OF_HORSES() = takes(0) returns(0) {}

#define macro GET_NUMBER_OF_HORSES() = takes(0) returns(0) {}